[package]
name = "memapi"
version = "0.17.0"
edition = "2018"
rust-version = "1.56.0"
authors = ["echohumm"]
description = "A no_std-friendly memory allocation interface for raw buffers, with improved error reporting."
readme = "README.md"
license = "MIT OR Apache-2.0"
repository = "https://github.com/echohumm/memapi"
keywords = ["allocator", "no_std", "memory", "allocation"]
categories = ["no-std", "memory-management"]
include = [
    "src/**",
    "build.rs",
    "Cargo.toml",
    "README.md",
]
build = "build.rs"



[package.metadata.docs.rs]
features = ["full"]

[badges]
docsrs = { status = "passing" }
maintenance = { status = "actively-developed" }



[profile.bench]
opt-level = 3
lto = true
codegen-units = 1
debug = false
overflow-checks = false
incremental = false

[profile.dev]
incremental = false




[features]
default = ["c_str", "const_max"]

# msrv-changing features
## that make small changes
const_extras = []
const_max = ["const_extras"]
c_str = []

## that make large changes
# todo: doc this and parking_lot
stats_file_lock = ["stats", "std"]

# nightly support
nightly = []
metadata = ["nightly"]
sized_hierarchy = ["nightly"]
clone_to_uninit = ["nightly"]
specialization = ["nightly"]

all_nightly = ["metadata", "sized_hierarchy", "clone_to_uninit", "specialization"]

default_nightly = ["metadata", "clone_to_uninit", "specialization"]

# std support
std = []
std_libc = ["std", "libc/std"]

# specific std features
os_err_reporting = ["std"]

# main extensions
alloc_ext = []
alloc_slice = []
resize_in_place = []

# stats
stats = []
stats_parking_lot = ["stats", "parking_lot"]

# external allocators
external_alloc = ["libc"]

jemalloc = ["memapi-jemalloc-sys", "external_alloc"]
jemalloc_in_place = ["jemalloc", "resize_in_place"]

mimalloc = ["memapi-mimalloc-sys", "external_alloc"]
mimalloc_in_place = ["mimalloc", "resize_in_place"]
mimalloc_err_reporting = ["mimalloc", "mimalloc_debug", "os_err_reporting", "parking_lot"]
mimalloc_err_output = ["mimalloc_err_reporting"]

# external lallocator bundles
external_allocs = ["jemalloc", "mimalloc"]
external_allocs_in_place = ["jemalloc_in_place", "mimalloc_in_place"]

# bundles
core = ["alloc_slice", "alloc_ext", "stats"]
std_core = ["core", "os_err_reporting"]
full_no_std_stable = [
    "c_str",
    "const_max",
    "stats_file_lock",
    "stats_parking_lot",
    "external_allocs_in_place",
    "core",
]
full_no_std_nightly = ["all_nightly", "full_no_std_stable"]
full_std_stable = ["std", "full_no_std_stable"]
full_std_nightly = ["std", "all_nightly", "full_no_std_stable"]

full_extern = [
    "external_allocs_in_place",
    "mimalloc_err_reporting",
]
full_extern_mimdebug = ["full_extern", "mimalloc_err_output"]

full = ["full_std_stable", "full_std_nightly", "full_extern"]
full_mimdebug = ["full", "full_extern_mimdebug"]

# jemalloc feature bindings
jemalloc_background_threads_runtime_support = ["memapi-jemalloc-sys/background_threads_runtime_support"]
jemalloc_background_threads = [
    "jemalloc_background_threads_runtime_support",
    "memapi-jemalloc-sys/background_threads",
]
jemalloc_debug = ["memapi-jemalloc-sys/debug"]
jemalloc_default = ["jemalloc_background_threads_runtime_support", "memapi-jemalloc-sys/default"]
jemalloc_disable_cache_oblivious = ["memapi-jemalloc-sys/disable_cache_oblivious"]
jemalloc_disable_initial_exec_tls = ["memapi-jemalloc-sys/disable_initial_exec_tls"]
jemalloc_profiling = ["memapi-jemalloc-sys/profiling"]
jemalloc_stats = ["memapi-jemalloc-sys/stats"]
jemalloc_unprefixed_malloc_on_supported_platforms = ["memapi-jemalloc-sys/unprefixed_malloc_on_supported_platforms"]

# mimalloc feature bindings
mimalloc_arena = ["memapi-mimalloc-sys/arena"]
mimalloc_debug = ["memapi-mimalloc-sys/debug"]
mimalloc_debug_in_debug = ["memapi-mimalloc-sys/debug_in_debug"]
mimalloc_local_dynamic_tls = ["memapi-mimalloc-sys/local_dynamic_tls"]
mimalloc_no_thp = ["memapi-mimalloc-sys/no_thp"]
mimalloc_override = ["memapi-mimalloc-sys/override"]
mimalloc_secure = ["memapi-mimalloc-sys/secure"]



[[test]]
name = "base"
path = "tests/alloc.rs"

[[test]]
name = "dangerous"
path = "tests/potential_ub.rs"

[[test]]
name = "ext"
path = "tests/alloc_ext.rs"
required-features = ["alloc_ext"]

[[test]]
name = "jem"
path = "tests/jemalloc.rs"
required-features = ["jemalloc"]

[[test]]
name = "mim"
path = "tests/mimalloc.rs"
required-features = ["mimalloc"]

[[test]]
name = "slice"
path = "tests/alloc_slice.rs"
required-features = ["alloc_slice"]

[[test]]
name = "stats"
path = "tests/stats.rs"
required-features = ["stats", "std"]



# if this crate is ever built with a version above msrv, it will stop compiling because of this.
# if you want to use the benchmarks, uncomment this.
#[dev-dependencies.criterion]
#version = "^0.4.0"
#default-features = false
#
#[[bench]]
#name = "bench"
#path = "benches/bench.rs"
#harness = false
#required-features = ["alloc_ext"]



[dependencies.lock_api]
version = "=0.4.12"
optional = true

[dependencies.libc]
version = "^0.2.0"
optional = true
default-features = false

[dependencies.memapi-jemalloc-sys]
version = "0.1.1"
optional = true
default-features = false

[dependencies.memapi-mimalloc-sys]
version = "0.1.2"
optional = true
default-features = false
features = ["extended"]

[dependencies.parking_lot]
# :) i hate cargo.lock so much. if i set this to be ^*, the msrv breaks :D
version = "^0.12.3"
optional = true
default-features = false
